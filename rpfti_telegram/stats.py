from .core_addon import BotCommand, BotAddon
import datetime


def get_summary(cmd, user, chat, message, cmd_args):
    bot = cmd.addon.bot
    bots = bot.models["Bots"]
    messages = bot.models["Messages"]

    out_string = "–ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –ø–æ –±–æ—Ç—É\n"

    for b in bots.objects.all():
        totaltime = datetime.datetime.utcnow() - b.\
            start_time.replace(tzinfo=None)
        out_string += "–ë–æ—Ç {} (–∑–∞–ø—É—â–µ–Ω {}, —Ä–∞–±–æ—Ç–∞–µ—Ç {})"\
            ", –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ {} —Å–æ–æ–±—â–µ–Ω–∏–π\n".format(
                b.name, b.start_time, totaltime,
                messages.objects.filter(bot=b).count())
    pass


def get_statistics(cmd, user, chat, message, cmd_args):
    text = "–ó–∞–ø—Ä–æ—Å –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏..."
    cmd.addon.bot.send_message(chat, origin_user=user, text=text,
                               reply_to=message.message_id)
    bot = cmd.addon.bot
    bots = bot.models["Bots"]
    chats = bot.models["Chats"]
    users = bot.models["Users"]
    messages = bot.models["Messages"]
    likes = bot.models["Likes"]
    tasks = bot.models["Tasks"]
    out_string = "–ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"

    for b in bots.objects.all():
        totaltime = datetime.datetime.utcnow() - \
            b.start_time.replace(tzinfo=None)
        out_string += "---–ë–æ—Ç {}---\n(–∑–∞–ø—É—â–µ–Ω {}, —Ä–∞–±–æ—Ç–∞–µ—Ç {})\n".format(
            b.name, b.start_time, totaltime)
        out_string += "–ß–ê–¢–´:\n"
        for c in chats.objects.filter(bot=b):
            if c.chat_type in ["group", "supergroup"]:
                out_string += "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ß–∞—Ç \"{}\"".format(c.title)
            elif c.chat_type == "channel":
                out_string += "üó£ –ö–∞–Ω–∞–ª \"{}\"".format(c.title)
            elif c.chat_type == "private":
                out_string += "üë®üèª –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å {} {} {}".format(
                    c.first_name, c.user_name, c.last_name)
            else:
                out_string += "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–∏–∞–ª–æ–≥–∞: {}".format(
                    c.telegram_id)
            out_string += " (–¥–æ–±–∞–≤–ª–µ–Ω {})".format(c.init_date)
            if c.is_active:
                out_string += " –∏ —Å–µ–π—á–∞—Å –∞–∫—Ç–∏–≤–µ–Ω,\n|"
            else:
                out_string += " –∏ —Å–µ–π—á–∞—Å –æ—Ç–∫–ª—é—á–µ–Ω,\n|"
            out_string += "|\t–≤—Å–µ–≥–æ {} —Å–æ–æ–±—â–µ–Ω–∏–π\n|\n|".format(
                messages.objects.filter(chat=c, bot=b).count())
            for t in tasks.objects.filter(chat=c, bot=b):
                out_string += \
                    "|\t‚è∞ –ó–∞–¥–∞—á–∞: –∞–¥–¥–æ–Ω "
                "{}, –∫–æ–º–∞–Ω–¥–∞ {}, —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ {} (—É–∂–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∞ {} —Ä–∞–∑)\n".\
                    format(t.addon, t.command, t.trigger_time, t.counter)
            out_string += "---\n"
        out_string += "\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n"
        for u in users.objects.filter(bot=b):
            out_string += "{} {} {} - {},".format(
                u.first_name, u.user_name, u.last_name,
                messages.objects.filter(to_user=u).count())
            out_string += " –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å {} —Å–æ–æ–±—â–µ–Ω–∏–π\n".format(
                likes.objects.filter(liked_by=u).count())

        out_string += "\n\n"
    cmd.addon.bot.send_message(chat, origin_user=user, text=out_string,
                               reply_to=message.message_id)


def cmd_get_stats():
    return BotCommand("get_stats", get_statistics,
                      help_text="–∑–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
                      acceptable_roles=["ADMIN"])


def cmd_get_summary():
    return BotCommand("get_summary", get_summary,
                      help_text="–∑–∞–ø—Ä–æ—Å —Å–≤–æ–¥–∫–∏",
                      acceptable_roles=["ADMIN"])


def make_stats_addon():
    return BotAddon("Stats", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    [cmd_get_stats(), cmd_get_summary()])
